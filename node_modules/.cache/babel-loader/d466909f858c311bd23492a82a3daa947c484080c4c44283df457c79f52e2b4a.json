{"ast":null,"code":"export default {\n  data() {\n    return {\n      songTitle: '',\n      songComposer: '',\n      lyrics: [],\n      currentIndex: 0,\n      songs: [\"song_1.json\", \"song_2.json\", \"song_3.json\"],\n      currentSongIndex: 0\n    };\n  },\n  watch: {\n    currentIndex(newIndex) {\n      this.scrollToLyric(newIndex);\n    }\n  },\n  created() {\n    this.loadLyrics(this.songs[this.currentSongIndex]);\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  },\n  methods: {\n    async loadLyrics(song) {\n      const response = await fetch(`./assets/${song}`);\n      const data = await response.json();\n      this.lyrics = data.lyrics;\n      this.songTitle = data.title;\n      this.songComposer = data.composer;\n      this.currentIndex = 0; // Reset current index when loading a new song\n    },\n    handleKeyDown(event) {\n      if (event.code === \"Space\") {\n        this.currentIndex = (this.currentIndex + 1) % this.lyrics.length;\n      } else if (event.code === \"ArrowRight\") {\n        this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      } else if (event.code === \"ArrowLeft\") {\n        this.currentSongIndex = (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      } else if (event.code === \"ArrowUp\") {\n        this.currentIndex = (this.currentIndex - 1 + this.lyrics.length) % this.lyrics.length;\n      } else if (event.code === \"ArrowDown\") {\n        this.currentIndex = (this.currentIndex + 1) % this.lyrics.length;\n      }\n    },\n    highlightLyric(index) {\n      this.currentIndex = index;\n    },\n    scrollToLyric(index) {\n      const lyricElement = this.$refs['lyric' + index];\n      const lyricsContainer = this.$refs.lyricsContainer;\n      if (lyricElement && lyricElement.length && lyricsContainer) {\n        const elementTop = lyricElement[0].offsetTop;\n        const containerHeight = lyricsContainer.clientHeight;\n        lyricsContainer.scrollTo({\n          top: elementTop - containerHeight / 2,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","songTitle","songComposer","lyrics","currentIndex","songs","currentSongIndex","watch","newIndex","scrollToLyric","created","loadLyrics","window","addEventListener","handleKeyDown","beforeUnmount","removeEventListener","methods","song","response","fetch","json","title","composer","event","code","length","highlightLyric","index","lyricElement","$refs","lyricsContainer","elementTop","offsetTop","containerHeight","clientHeight","scrollTo","top","behavior"],"sources":["/Users/azimi.arsyad/Documents/Wisuda/Lirik/lyrics-highlight-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"song-info\">\n      <h2>{{ songTitle }}</h2>\n      <p>{{ songComposer }}</p>\n    </div>\n    <div class=\"lyrics-container-wrapper\">\n      <div class=\"lyrics-container\" ref=\"lyricsContainer\">\n        <div\n          v-for=\"(line, index) in lyrics\"\n          :key=\"index\"\n          :class=\"{\n            'highlighted': index === currentIndex,\n            'passed': index < currentIndex\n          }\"\n          class=\"lyric-line\"\n          @click=\"highlightLyric(index)\"\n          :ref=\"'lyric' + index\"\n        >\n          {{ line }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      songTitle: '',\n      songComposer: '',\n      lyrics: [],\n      currentIndex: 0,\n      songs: [\"song_1.json\", \"song_2.json\", \"song_3.json\"],\n      currentSongIndex: 0\n    };\n  },\n  watch: {\n    currentIndex(newIndex) {\n      this.scrollToLyric(newIndex);\n    }\n  },\n  created() {\n    this.loadLyrics(this.songs[this.currentSongIndex]);\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  },\n  methods: {\n    async loadLyrics(song) {\n      const response = await fetch(`./assets/${song}`);\n      const data = await response.json();\n      this.lyrics = data.lyrics;\n      this.songTitle = data.title;\n      this.songComposer = data.composer;\n      this.currentIndex = 0; // Reset current index when loading a new song\n    },\n    handleKeyDown(event) {\n      if (event.code === \"Space\") {\n        this.currentIndex = (this.currentIndex + 1) % this.lyrics.length;\n      } else if (event.code === \"ArrowRight\") {\n        this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      } else if (event.code === \"ArrowLeft\") {\n        this.currentSongIndex =\n          (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      } else if (event.code === \"ArrowUp\") {\n        this.currentIndex = (this.currentIndex - 1 + this.lyrics.length) % this.lyrics.length;\n      } else if (event.code === \"ArrowDown\") {\n        this.currentIndex = (this.currentIndex + 1) % this.lyrics.length;\n      }\n    },\n    highlightLyric(index) {\n      this.currentIndex = index;\n    },\n    scrollToLyric(index) {\n      const lyricElement = this.$refs['lyric' + index];\n      const lyricsContainer = this.$refs.lyricsContainer;\n      if (lyricElement && lyricElement.length && lyricsContainer) {\n        const elementTop = lyricElement[0].offsetTop;\n        const containerHeight = lyricsContainer.clientHeight;\n        lyricsContainer.scrollTo({\n          top: elementTop - containerHeight / 2,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  margin: 0;\n  background-color: #ecf0f1;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  color: #2c3e50;\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.song-info {\n  width: 25vw;\n  text-align: left;\n}\n\n.song-info h2 {\n  font-size: 2.5rem;\n}\n\n.song-info p {\n  font-size: 1.5rem;\n}\n\n.lyrics-container-wrapper {\n  width: 60vw;\n  max-height: 80vh;\n  overflow: hidden;\n  background-color: rgb(11, 9, 9);\n  padding: 2rem;\n  border-radius: 2rem;\n  position: relative;\n}\n\n.lyrics-container {\n  max-height: 100%;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n  padding-right: 16px; /* Adjust to create space for the scrollbar */\n  box-sizing: content-box;\n  scrollbar-width: none; /* Hide scrollbar for Firefox */\n}\n\n.lyrics-container:hover {\n  scrollbar-width: thin;\n  scrollbar-color: rgba(0, 0, 0, 0.5) transparent; /* Firefox */\n}\n\n/* For WebKit browsers (Chrome, Safari) */\n.lyrics-container::-webkit-scrollbar {\n  width: 0;\n}\n\n.lyrics-container:hover::-webkit-scrollbar {\n  width: 8px; /* Show scrollbar on hover */\n}\n\n.lyrics-container::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.lyrics-container::-webkit-scrollbar-thumb {\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  border: 2px solid transparent;\n  background-clip: content-box;\n}\n\n.lyrics-container:hover::-webkit-scrollbar-thumb {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n\n.lyric-line {\n  color: rgba(238, 240, 246, 0.75);\n  margin: 5px 0;\n  font-size: 4.25rem;\n  cursor: pointer;\n  font-weight: 900;\n}\n\n.lyric-line.highlighted {\n  color: rgb(228, 200, 18);\n}\n\n.lyric-line.passed {\n  color: rgb(242, 248, 165);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}