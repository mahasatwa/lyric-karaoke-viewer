{"ast":null,"code":"export default {\n  data() {\n    return {\n      songTitle: '',\n      songComposer: '',\n      lyrics: [],\n      currentIndex: 0,\n      songs: [\"song_1.json\", \"song_2.json\", \"song_3.json\"],\n      currentSongIndex: 0\n    };\n  },\n  created() {\n    this.loadLyrics(this.songs[this.currentSongIndex]);\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  },\n  methods: {\n    async loadLyrics(song) {\n      const response = await fetch(`./assets/${song}`);\n      const data = await response.json();\n      this.lyrics = data.lyrics;\n      this.songTitle = data.title;\n      this.songComposer = data.composer;\n      this.currentIndex = 0; // Reset current index when loading a new song\n    },\n    handleKeyDown(event) {\n      if (event.code === \"Space\") {\n        this.currentIndex = (this.currentIndex + 1) % this.lyrics.length;\n      } else if (event.code === \"ArrowRight\") {\n        this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      } else if (event.code === \"ArrowLeft\") {\n        this.currentSongIndex = (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      }\n    },\n    highlightLyric(index) {\n      this.currentIndex = index;\n    }\n  }\n};","map":{"version":3,"names":["data","songTitle","songComposer","lyrics","currentIndex","songs","currentSongIndex","created","loadLyrics","window","addEventListener","handleKeyDown","beforeUnmount","removeEventListener","methods","song","response","fetch","json","title","composer","event","code","length","highlightLyric","index"],"sources":["/Users/azimi.arsyad/Documents/Wisuda/Lirik/lyrics-highlight-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"song-info\">\n      <h2>{{ songTitle }}</h2>\n      <p>{{ songComposer }}</p>\n    </div>\n    <div class=\"lyrics-container\">\n      <div\n        v-for=\"(line, index) in lyrics\"\n        :key=\"index\"\n        :class=\"{\n          'highlighted': index === currentIndex,\n          'passed': index < currentIndex\n        }\"\n        class=\"lyric-line\"\n        @click=\"highlightLyric(index)\"\n      >\n        {{ line }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      songTitle: '',\n      songComposer: '',\n      lyrics: [],\n      currentIndex: 0,\n      songs: [\"song_1.json\", \"song_2.json\", \"song_3.json\"],\n      currentSongIndex: 0\n    };\n  },\n  created() {\n    this.loadLyrics(this.songs[this.currentSongIndex]);\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  },\n  methods: {\n    async loadLyrics(song) {\n      const response = await fetch(`./assets/${song}`);\n      const data = await response.json();\n      this.lyrics = data.lyrics;\n      this.songTitle = data.title;\n      this.songComposer = data.composer;\n      this.currentIndex = 0; // Reset current index when loading a new song\n    },\n    handleKeyDown(event) {\n      if (event.code === \"Space\") {\n        this.currentIndex = (this.currentIndex + 1) % this.lyrics.length;\n      } else if (event.code === \"ArrowRight\") {\n        this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      } else if (event.code === \"ArrowLeft\") {\n        this.currentSongIndex =\n          (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;\n        this.loadLyrics(this.songs[this.currentSongIndex]);\n      }\n    },\n    highlightLyric(index) {\n      this.currentIndex = index;\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  color: #2c3e50;\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.song-info {\n  width: 30vw;\n  text-align: left;\n}\n\n.song-info h2 {\n  font-size: 3rem;\n}\n\n.song-info p {\n  font-size: 1.5rem;\n}\n\n.lyrics-container {\n  width: 70vw;\n  background-color: rgb(255, 254, 254);\n  padding: 20px;\n}\n\n.lyric-line {\n  color: rgba(7, 34, 110, 0.85);\n  margin: 5px 0;\n  font-size: 3rem;\n  cursor: pointer;\n  font-weight: 900;\n}\n\n.lyric-line.highlighted {\n  color: rgb(14, 46, 134);\n}\n\n.lyric-line.passed {\n  color: rgba(2, 47, 90, 0.85);\n}\n</style>\n"],"mappings":"AAwBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,CAAC;MACfC,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;MACpDC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,IAAI,CAACH,KAAK,CAAC,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAClDG,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACC,aAAa,CAAC;EACxD,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACF,aAAa,CAAC;EAC3D,CAAC;EACDG,OAAO,EAAE;IACP,MAAMN,UAAUA,CAACO,IAAI,EAAE;MACrB,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,YAAYF,IAAI,EAAE,CAAC;MAChD,MAAMf,IAAG,GAAI,MAAMgB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClC,IAAI,CAACf,MAAK,GAAIH,IAAI,CAACG,MAAM;MACzB,IAAI,CAACF,SAAQ,GAAID,IAAI,CAACmB,KAAK;MAC3B,IAAI,CAACjB,YAAW,GAAIF,IAAI,CAACoB,QAAQ;MACjC,IAAI,CAAChB,YAAW,GAAI,CAAC,EAAE;IACzB,CAAC;IACDO,aAAaA,CAACU,KAAK,EAAE;MACnB,IAAIA,KAAK,CAACC,IAAG,KAAM,OAAO,EAAE;QAC1B,IAAI,CAAClB,YAAW,GAAI,CAAC,IAAI,CAACA,YAAW,GAAI,CAAC,IAAI,IAAI,CAACD,MAAM,CAACoB,MAAM;MAClE,OAAO,IAAIF,KAAK,CAACC,IAAG,KAAM,YAAY,EAAE;QACtC,IAAI,CAAChB,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAe,GAAI,CAAC,IAAI,IAAI,CAACD,KAAK,CAACkB,MAAM;QACvE,IAAI,CAACf,UAAU,CAAC,IAAI,CAACH,KAAK,CAAC,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACpD,OAAO,IAAIe,KAAK,CAACC,IAAG,KAAM,WAAW,EAAE;QACrC,IAAI,CAAChB,gBAAe,GAClB,CAAC,IAAI,CAACA,gBAAe,GAAI,IAAI,IAAI,CAACD,KAAK,CAACkB,MAAM,IAAI,IAAI,CAAClB,KAAK,CAACkB,MAAM;QACrE,IAAI,CAACf,UAAU,CAAC,IAAI,CAACH,KAAK,CAAC,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACpD;IACF,CAAC;IACDkB,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACrB,YAAW,GAAIqB,KAAK;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}